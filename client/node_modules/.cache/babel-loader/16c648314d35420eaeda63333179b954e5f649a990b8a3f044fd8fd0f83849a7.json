{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaarias/Documents/ProjectsSummer/cast/src/Components/Daily/Daily.jsx\";\nimport React from 'react';\nimport './Daily.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Daily = ({\n  forecast,\n  dummyForecast\n}) => {\n  console.log(forecast, dummyForecast);\n  const toFahrenheit = temp => {\n    const fah = (temp - 273.15) * 1.8 + 32;\n    return Math.floor(fah);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forecast (every 3 hours)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecast ? forecast.list.splice(0, 12).map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: w.dt_txt.split(' ')[1].slice(0, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`,\n            alt: w.weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"deg\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [toFahrenheit(w.main.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)) : dummyForecast.list.splice(0, 12).map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: w.dt_txt.split(' ')[1].slice(0, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`,\n            alt: w.weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"deg\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [toFahrenheit(w.main.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Daily;\nexport default Daily;\nvar _c;\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Daily","forecast","dummyForecast","console","log","toFahrenheit","temp","fah","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","list","splice","map","w","i","dt_txt","split","slice","src","weather","icon","alt","description","main","_c","$RefreshReg$"],"sources":["/Users/claudiaarias/Documents/ProjectsSummer/cast/src/Components/Daily/Daily.jsx"],"sourcesContent":["import React from 'react'\nimport './Daily.css'\n\n\nconst Daily = ({forecast, dummyForecast}) => {\n\n    console.log(forecast, dummyForecast)\n\n    const toFahrenheit = (temp) => {\n        const fah = (temp - 273.15) * 1.8 + 32\n\n        return Math.floor(fah)\n    }\n\n    return (\n        <div className='daily'>\n            <h1>Forecast (every 3 hours)</h1>\n            <ul>\n                {\n                    forecast ? (\n                    forecast.list.splice(0,12).map((w, i) => (\n                        <li key={i}>\n                            <p>{w.dt_txt.split(' ')[1].slice(0,5)}</p>\n                            <div>\n                                <img src={`https://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`} alt={w.weather.description} />\n                            </div>\n                            <p className=\"deg\"><strong>{toFahrenheit(w.main.temp)}°</strong></p>\n                        </li>\n                    ))\n                    )\n                    :\n                    (\n                    dummyForecast.list.splice(0,12).map((w, i) => (\n                        <li key={i}>\n                            <p>{w.dt_txt.split(' ')[1].slice(0,5)}</p>\n                            <div>\n                                <img src={`https://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`} alt={w.weather.description} />\n                            </div>\n                            <p className=\"deg\"><strong>{toFahrenheit(w.main.temp)}°</strong></p>\n                        </li>\n                    ))\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Daily"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}