{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaarias/Documents/ProjectsSummer/cast/src/Context/WeatherContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext(null);\nconst WeatherContextProvider = ({\n  city,\n  country,\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // accept city and country as props\n        // update the API call\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=eb5bf5cf252dcc79c75fe1ddbad6ceb3`);\n        setWeather(res.data);\n        console.log(JSON.stringify(res.data));\n      } catch (err) {\n        console.log(\"Failed to get data: \", err.message);\n      }\n    }\n    fetchData();\n  }, [city, country]);\n  const contextValue = {\n    weather\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherContextProvider, \"ckY3XUe2jE/3yAZqXdXPBh/jZTc=\");\n_c = WeatherContextProvider;\nexport default WeatherContextProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherContext","WeatherContextProvider","city","country","children","_s","weather","setWeather","fetchData","res","get","data","console","log","JSON","stringify","err","message","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/claudiaarias/Documents/ProjectsSummer/cast/src/Context/WeatherContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const WeatherContext = createContext(null);\n\nconst WeatherContextProvider = ({ city, country, children }) => {\n    const [weather, setWeather] = useState();\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                // accept city and country as props\n                // update the API call\n                const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=eb5bf5cf252dcc79c75fe1ddbad6ceb3`);\n                setWeather(res.data);\n                console.log(JSON.stringify(res.data));\n            } catch (err) {\n                console.log(\"Failed to get data: \", err.message);\n            }\n        }\n        fetchData();\n    }, [city, country]);\n\n    const contextValue = { weather };\n\n    return (\n        <WeatherContext.Provider value={contextValue}>\n            {children}\n        </WeatherContext.Provider>\n    );\n};\n\nexport default WeatherContextProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,cAAc,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEjD,MAAMO,sBAAsB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAea,SAASA,CAAA,EAAG;MACvB,IAAI;QACA;QACA;QACA,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,qDAAoDR,IAAK,IAAGC,OAAQ,yCAAwC,CAAC;QAC1II,UAAU,CAACE,GAAG,CAACE,IAAI,CAAC;QACpBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,GAAG,CAACE,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,GAAG,CAACC,OAAO,CAAC;MACpD;IACJ;IACAT,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,IAAI,EAAEC,OAAO,CAAC,CAAC;EAEnB,MAAMe,YAAY,GAAG;IAAEZ;EAAQ,CAAC;EAEhC,oBACIP,OAAA,CAACC,cAAc,CAACmB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAd,QAAA,EACxCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACnB,EAAA,CAzBIJ,sBAAsB;AAAAwB,EAAA,GAAtBxB,sBAAsB;AA2B5B,eAAeA,sBAAsB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}