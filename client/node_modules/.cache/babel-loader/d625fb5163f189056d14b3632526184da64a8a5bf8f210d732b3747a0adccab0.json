{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaarias/Documents/cast/src/Context/WeatherContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext(null);\nconst WeatherContextProvider = props => {\n  _s();\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get('https://api.openweathermap.org/data/2.5/weather?q=bronx&appid=eb5bf5cf252dcc79c75fe1ddbad6ceb3');\n        setWeather(res.data);\n        console.log(JSON.stringify(res.data));\n      } catch (err) {\n        console.log(\"Failed to get data: \", err.message);\n      }\n    }\n    fetchData();\n  }, []);\n  const contextValue = {\n    weather\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherContextProvider, \"ckY3XUe2jE/3yAZqXdXPBh/jZTc=\");\n_c = WeatherContextProvider;\nexport default WeatherContextProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherContext","WeatherContextProvider","props","_s","weather","setWeather","fetchData","res","get","data","console","log","JSON","stringify","err","message","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/claudiaarias/Documents/cast/src/Context/WeatherContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const WeatherContext = createContext(null);\n\nconst WeatherContextProvider = (props) => {\n    const [weather, setWeather] = useState();\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const res = await axios.get('https://api.openweathermap.org/data/2.5/weather?q=bronx&appid=eb5bf5cf252dcc79c75fe1ddbad6ceb3');\n                setWeather(res.data);\n                console.log(JSON.stringify(res.data))\n            } catch (err) {\n                console.log(\"Failed to get data: \", err.message)\n            }\n        }\n        fetchData();\n    }, [])\n\n    const contextValue = {weather}\n\n    return (\n        <WeatherContext.Provider value={contextValue}>\n            {props.children}\n        </WeatherContext.Provider>\n    )\n}\n\nexport default WeatherContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,cAAc,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEjD,MAAMO,sBAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAeW,SAASA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gGAAgG,CAAC;QAC7HH,UAAU,CAACE,GAAG,CAACE,IAAI,CAAC;QACpBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,GAAG,CAACE,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,GAAG,CAACC,OAAO,CAAC;MACpD;IACJ;IACAT,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,YAAY,GAAG;IAACZ;EAAO,CAAC;EAE9B,oBACIL,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACxCjB,KAAK,CAACiB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAElC,CAAC;AAAApB,EAAA,CAvBKF,sBAAsB;AAAAuB,EAAA,GAAtBvB,sBAAsB;AAyB5B,eAAeA,sBAAsB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}